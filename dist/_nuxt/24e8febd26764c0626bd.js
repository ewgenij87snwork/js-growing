(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{375:function(n){n.exports=JSON.parse('[{"id":"1","name":"varLet","title":"Объявление через var, let","explain":"Если внутри функции переназначаем переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \\"блока\\"","example":"function myFunction() {\\n  let myVar = \\"Nick\\";\\n  if (true) {\\n    let myVar = \\"John\\";\\n    console.log(myVar); // \\"John\\"\\n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\\n  }\\n  console.log(myVar); // команды блока if НЕ влияют на \\"Nick\\"\\n}\\nconsole.log(myVar); // выведет ReferenceError, myVar не доступна вне функции","sprout":{"concept":"переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \\"блока\\"","code":"  let myVar = \\"Nick\\";\\n  if (true) {\\n    let myVar = \\"John\\";\\n    console.log(myVar); // \\"John\\"\\n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\\n  }\\n  console.log(myVar); // команды блока if НЕ влияют на \\"Nick\\"\\nvar result = myVar;\\n\\n document.getElementById(this.name).textContent = JSON.stringify(result);"}},{"id":"2","name":"2varLet","title":"222Объявление через var, let","explain":"222Если внутри функции переназначаем переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \\"блока\\"","example":"function myFunction() {\\n  let myVar = \\"Nick\\";\\n  if (true) {\\n    let myVar = \\"John\\";\\n    console.log(myVar); // \\"John\\"\\n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\\n  }\\n  console.log(myVar); // команды блока if НЕ влияют на \\"Nick\\"\\n}\\nconsole.log(myVar); // выведет ReferenceError, myVar не доступна вне функции","sprout":{"concept":"переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \\"блока\\"","code":"var myHonda = { color: \'красный\', wheels: 4, engine: { cylinders: 4, size: 2.2 } };\\nvar myCar = [myHonda, 2, \'в хорошем состоянии\', \'приобретена в 1997\'];\\nvar newCar = myCar.slice(0, 2);\\n\\n// Изменяем цвет myHonda.\\nmyHonda.color = \'багровый\';"}}]')},401:function(n,t,e){"use strict";e.r(t);var o=e(375),r={name:"modern-js",components:{introduction:function(){return e.e(24).then(e.bind(null,408))},convertToJson:function(){return e.e(2).then(e.bind(null,407))},grain:function(){return e.e(19).then(e.bind(null,413))}},data:function(){return{grains:o,intro:{title:"Modern JS",blockquote:"Знание без практики порождает лишь страсти",blockquoteAuthor:"Лао-Цзы",blockquoteSource:'"Дао Дэ Цзин. Книга о Пути и Силе"',subtitle:"Что здесь реализовывается",text:["Здесь будет минимум 2 компоненты: на шапку страницы и на учебные пункты.",'Учебные пункты -- их названия буду брать с первоисточника. Как раз потренируюсь называть их. Еще к ним сделаю навигацию. По клику будет переход и плавное появление частей учебного пункта, как на сайте барыжных последователй Кастаньеды...(ну чего они достигли, если им приходится зарабатывать на его имени?). В общем, моя задача реализовать "спокойствие" в этой анимации.',"К данному моменту уже была внедрена подсветка синтаксиса JS, где вручную переписал стили по своей теме в Sublime. К сожалению, highlight.js имеет недостаточное количество позиций для изменения цвета. В частности имена переменных, методы и скобки имеют один цвет. Возможно, стоит попробовать взять за основу другую тему или открыть и почитать js самого highlight. Но увы, на это нету времени, я должен бежать дальше "]}}},methods:{}},l=e(2),component=Object(l.a)(r,function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"out"},[e("introduction",{attrs:{intro:n.intro}}),n._v(" "),n._l(n.grains,function(n){return e("grain",{key:n.id,attrs:{name:n.name,title:n.title,explain:n.explain,example:n.example,concept:n.sprout.concept,code:n.sprout.code}})}),n._v(" "),e("base-button",{attrs:{type:"success"},on:{click:function(t){return n.pageLoader(n.onPageLoadingFinished)}}},[n._v("Boom!")]),n._v(" "),e("convertToJson")],2)},[],!1,null,"3bcb25fd",null);t.default=component.exports}}]);
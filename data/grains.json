[
{
	"id": "1",
	"name": "varLet",
	"title": "Объявление через var, let",
	"explain": "Если внутри функции переназначаем переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \"блока\"",
	"example": "function myFunction() {\n  let myVar = \"Nick\";\n  if (true) {\n    let myVar = \"John\";\n    console.log(myVar); // \"John\"\n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\n  }\n  console.log(myVar); // команды блока if НЕ влияют на \"Nick\"\n}\nconsole.log(myVar); // выведет ReferenceError, myVar не доступна вне функции",
	"sprout": {
		"concept": "переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \"блока\"",
		"code": "  let myVar = \"Nick\";\n  if (true) {\n    let myVar = \"John\";\n    console.log(myVar); // \"John\"\n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\n  }\n  console.log(myVar); // команды блока if НЕ влияют на \"Nick\"\nvar result = myVar;\n\n document.getElementById(this.name).textContent = JSON.stringify(result);"
	}
},
{
	"id": "2",
	"name": "2varLet",
	"title": "222Объявление через var, let",
	"explain": "222Если внутри функции переназначаем переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \"блока\"",
	"example": "function myFunction() {\n  let myVar = \"Nick\";\n  if (true) {\n    let myVar = \"John\";\n    console.log(myVar); // \"John\"\n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\n  }\n  console.log(myVar); // команды блока if НЕ влияют на \"Nick\"\n}\nconsole.log(myVar); // выведет ReferenceError, myVar не доступна вне функции",
	"sprout": {
		"concept": "переменную объявленную через <strong>var</strong>, то она изменяется повсеместно в пределах функции, елси переменная объявлена через <strong>let</strong>, то она изменится только в пределах \"блока\"",
		"code": "var myHonda = { color: 'красный', wheels: 4, engine: { cylinders: 4, size: 2.2 } };\nvar myCar = [myHonda, 2, 'в хорошем состоянии', 'приобретена в 1997'];\nvar newCar = myCar.slice(0, 2);\n\n// Изменяем цвет myHonda.\nmyHonda.color = 'багровый';"
	}
}
]